import random
import json
import os

from pico2d import *

import game_framework


name = "Player"


class Player:
    image = None
    LEFT_RUN, RIGHT_RUN, LEFT_STAND, RIGHT_STAND = 0, 1, 2, 3

    def __init__(self):
        self.x, self.y = random.randint(100, 700), 90
        self.frame = random.randint(0, 27)
        self.run_frames = 0
        self.stand_frames = 0
        self.state = self.RIGHT_RUN
        if Player.image == None:
            Player.image = load_image('AniSheet.png')

    def handle_left_run(self):
        self.x -= 5
        self.run_frames += 1
        if self.x < 0:
            self.state = self.RIGHT_RUN
            self.x = 0
        if self.run_frames == 100:
            self.state = self.LEFT_STAND
            self.stand_frames = 0
        pass  # fill here

    def handle_left_stand(self):
        self.stand_frames += 1
        if self.stand_frames == 50:
            self.state = self.LEFT_RUN
            self.run_frames = 0
        pass  # fill here

    def handle_right_run(self):
        self.x += 5
        self.run_frames += 1
        if self.x > 800:
            self.state = self.LEFT_RUN
            self.x = 800
        if self.run_frames == 100:
            self.state = self.RIGHT_STAND
            self.stand_frames = 0
        pass  # fill here

    def handle_right_stand(self):
        self.stand_frames += 1
        if self.stand_frames == 50:
            self.state = self.RIGHT_RUN
            self.run_frames = 0
        pass  # fill here

    def handle_inputs(self,event):
       if (event.type, event.key) == (SDL_KEYDOWN, SDLK_SPACE):
           if self.state == self.RIGHT_STAND:
               self.state = self.RIGHT_RUN
               self.run_frames = 0
           elif self.state == self.LEFT_STAND:
               self.state = self.LEFT_RUN
               self.run_frames = 0
           elif self.state == self.RIGHT_RUN:
               self.state = self.LEFT_RUN
               self.run_frames = 0
           elif self.state == self.LEFT_RUN:
               self.state = self.RIGHT_RUN
               self.run_frames = 0



    handle_state = {
        LEFT_RUN: handle_left_run,
        RIGHT_RUN: handle_right_run,
        LEFT_STAND: handle_left_stand,
        RIGHT_STAND: handle_right_stand
    }

    def update(self):
        if self.state == self.RIGHT_STAND or self.state == self.LEFT_STAND:
            self.frame = (self.frame + 1) % 27
        else:
            self.frame = (self.frame + 1) % 8
        self.handle_state[self.state](self)
        delay(0.01)

    def draw(self):
        self.image.clip_draw(self.frame * 100, self.state * 100, 100, 100, self.x, self.y)